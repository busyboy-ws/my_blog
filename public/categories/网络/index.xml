<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络 on 小松松的个人博客，记录学习和生活的点点滴滴！</title>
    <link>/categories/%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 网络 on 小松松的个人博客，记录学习和生活的点点滴滴！</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>小松松</copyright>
    <lastBuildDate>Sat, 11 Apr 2020 16:01:23 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从socket看事件驱动</title>
      <link>/post/socket-for-ioevent/</link>
      <pubDate>Sat, 11 Apr 2020 16:01:23 +0800</pubDate>
      
      <guid>/post/socket-for-ioevent/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近一段时间在看werkzegu的源码，也就顺手自己实现了一个类似werkzuge的功能代码，但写完后用&lt;code&gt;ab&lt;/code&gt;压测发现不能支持并发，每个请求都是串行的，这也就引起了我极大的疑惑，顾来写这边文章记录一下. 以下是疑虑的问题所在:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么使用&lt;code&gt;ab&lt;/code&gt;压测&lt;strong&gt;werkzuge&lt;/strong&gt;可以实现并发处理http请求(注：不是真正的并发，只是在请求上)，底层用了什么技术.(io事件驱动)&lt;/li&gt;
&lt;li&gt;io事件驱动和多线程和多进程有什么关系呢？(也考虑过和协程的关系)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;带着这样的问题，我做了以下的代码编写.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Werkzuge的一次请求和响应</title>
      <link>/post/werkzuge-request/</link>
      <pubDate>Tue, 04 Feb 2020 16:01:23 +0800</pubDate>
      
      <guid>/post/werkzuge-request/</guid>
      <description>&lt;h2 id=&#34;werkzuge示例&#34;&gt;werkzuge示例&lt;/h2&gt;
&lt;p&gt;一个简单的werkzuge示例如下所示:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记录一次公司的网络丢包</title>
      <link>/post/mysql-network/</link>
      <pubDate>Sun, 04 Aug 2019 16:01:23 +0800</pubDate>
      
      <guid>/post/mysql-network/</guid>
      <description>&lt;p&gt;最近公司网络出现一个很诡异的现象,Navicat连接阿里云数据库等待一段时间(大约5s)之后,再次执行相应的SQL语句会变的异常卡顿,经过排查问题出现在我们的防火墙设备上,以下是排查过程.&lt;/p&gt;

&lt;h2 id=&#34;一现象描述&#34;&gt;一、现象描述&lt;/h2&gt;

&lt;p&gt;大约在15号下午左右,开发人员反馈Navicat连接阿里云数据库非常的卡顿,平时秒级的查询今天要查询很久,无法忍受。&lt;/p&gt;

&lt;p&gt;接开发人员反馈后立即登陆到本地的一个ubuntu机器进行网络测试,因为从现象上来看可以大致判断这是一个网络问题,于是ping对应的RDS数据后发现网络并没有什么异常。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>